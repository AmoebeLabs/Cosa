----------------------------------------------------------------------------
COSA CLASS OVERVIEW
----------------------------------------------------------------------------
Linkage
The Cosa collection handling. Broadcasts events of a set of objects.
-  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
Linkage.hh:	class Linkage : public Event::Handler
Linkage.hh:	      class Link : public Linkage
Linkage.hh:	      class Head : public Linkage
----------------------------------------------------------------------------
PINS
Object-oriented approach to sketch pin declaration and function structuring. 
-  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
Pins.hh:	class Pin : public Event::Handler
Pins.hh:	      class InputPin : public Pin
Pins.hh:	      	    class InterruptPin : public InputPin
Pins.hh:	      class OutputPin : public Pin
Pins.hh:	      	    class PWMPin : public OutputPin
Pins.hh:		    class IOPin : public OutputPin
Pins.hh:	      class AnalogPin : public Pin
Pins.hh:	class AnalogPins
----------------------------------------------------------------------------
PERIODIC
Periodic functions. Syntatic sugar for watchdog timeout queue.
-  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
Periodic.hh:	class Periodic : private Link
----------------------------------------------------------------------------
FSM
Finite State Machines
Support for constructing finite state machines (FSM) with timeout handling
and periodic execution.
-  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
FSM.hh:		class FSM : private Link
----------------------------------------------------------------------------
BUTTON
Abstraction of debounced switch or button connected to an input pin.
-  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
Button.hh:	class Button : public InputPin, private Link
----------------------------------------------------------------------------
EVENT QUEUE
Support for pushing events from interrupt handlers and asic event dispatch.
-  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
Event.hh:	class Event
Event.hh:	      class Event::Handler
Queue.hh:	class Queue
----------------------------------------------------------------------------
WATCHDOG
Ultra low power timer. Time base for delay and timeout events. 
Allow attaching pins etc to receive timeout events.
-  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
Watchdog.hh:	class Watchdog (static, singleton)
----------------------------------------------------------------------------
IOSTREAM
Stream and device abstraction. 
-  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
IOStream.hh:	class IOStream
IOStream.hh:          class IOStream::Device
IOStream/UART.hh:      	    class UART : public IOStream::Device
----------------------------------------------------------------------------
TRACE
Trace log support.
-  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
Trace.hh:	Trace trace (singleton)
Trace.hh:	class Trace : public IOStream
----------------------------------------------------------------------------
CIAO and COSA FAI
The Cosa data stream handler. See CIAO.txt.
-  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
Ciao.hh:	class Ciao
		      class Ciao::Descriptor
Fai.hh:		class Fai : public Ciao
		      class Fai::Descriptor
----------------------------------------------------------------------------
CANVAS
The Cosa graphics device handler
-  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
Canvas.hh:      class Canvas 
SPI/ST7735R.hh:       class ST7735R : public Canvas
----------------------------------------------------------------------------
CANVAS::CONTEXT
The Cosa Canvas graphical context.
-  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
Canvas.hh:     	     	class Canvas::Context
Canvas.hh:     	     	class Canvas::Element : public Canvas::Context
----------------------------------------------------------------------------
CANVAS::ELEMENT
The Cosa Canvas graphical elements.
-  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
Canvas/Element/Textbox:	      class Textbox : 
			      	    public Canvas::Element, 
				    public IOStream::Device
----------------------------------------------------------------------------
FONT
The Cosa Canvas font handler.
-  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
Canvas/Font/System5x7.hh:     System5x7 system5x7 (singleton)
Canvas/Font/Fixednums8x16.hh: Fixednums8x16 fixednums8x16 (singleton)
Canvas/Font.hh:		      class Font
Canvas/Font/System5x7.hh:     	    class System5x7 : public Font
Canvas/Font/Fixednums8x16.hh:	    class Fixednums8x16 : public Font
----------------------------------------------------------------------------
OWI
Driver for devices on the one wire bus (1-Wire). Support for DS18B20
Programmable Resolution 1-Wire Digital Thermometer.
-  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
OWI.hh:		class OWI : private IOPin
OWI.hh:		      class OWI::Device : public InterruptPin
OWI.hh:		      class OWI::Driver			     
OWI/DS18B20.hh:	      	    class DS18B20 : public OWI::Driver
----------------------------------------------------------------------------
TWO WIRE INTERFACE
Driver for devices on the two wire interface (TWI/I2C).
Support for AT24CXX Serial EEPROM, DS1307 Realtime clock with RAM,
PCF8591 2-Wire 8-bit A/D and D/A converter. 
-  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
TWI.hh:		TWI twi (singleton)
TWI.hh:		class TWI
TWI.hh:		      class TWI::Device : public Event::Handler
TWI.hh:		      class TWI::Driver : public Event::Handler
TWI/AT24CXX.hh:	      	    class AT24CXX : private TWI::Driver
TWI/DS1307.hh:	      	    class DS1307 : private TWI::Driver
TWI/PCF8591.hh:	      	    class PCF8591 : private TWI::Driver
----------------------------------------------------------------------------
SERIAL PERIPHERAL INTERFACE
Driver for devices on the serial peripherial interface (SPI). Support
for ADXL345 Digital Accelerometer, nRF24L01 Single Chip 2.4GHz
Transceiver, and ST7735R, 262K Color Single-Chip TFT Controller.
-  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
SPI.hh:		SPI spi (singleton)
SPI.hh:		class SPI
SPI.hh:		      class SPI::Device : public Event::Handler
SPI.hh:		      class SPI::Driver : public Event::Handler
SPI/ADXL345.hh:	      	    class ADXL345 : private SPI::Driver
SPI/NRF24L01P.hh:      	    class NRF24L01P : private SPI::Driver
SPI/ST7735R.hh:             class ST7735R : public Canvas, private SPI::Driver
----------------------------------------------------------------------------
DHT11 
Humidity & Temperature Sensor device driver.
-  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
Drivers/DHT11.hh:	class DHT11 : private Link
----------------------------------------------------------------------------
HC-SR04/US-020
Ultrasonic range module device driver.
-  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
Drivers/HCSR04.hh:	class HCSR04 : private Link
----------------------------------------------------------------------------
SUPPORT
-  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  -  
Types.h:       	     	common types and definitions
BCD.h:			converting bcd numbers to and from binary
Bits.h:			macros to handle bit field and position 
FixedPoint.hh:		handling of fixed point numbers
Memory.h:		memory status functions
----------------------------------------------------------------------------

